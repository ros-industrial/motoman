<launch>

<!-- This launch file provides a socket-based connection to industrial robots
     that implement the standard ROS Industrial simple_message protocol.
     *** Motion control is implemented by STREAMING path data to the robot ***
         (for DOWNLOAD-based path-control, use a different launch file)

     Several nodes are started, to supply both low-level robot communication
     and higher-level actionlib support:
       - robot_state : publishes current joint positions and robot state data
       - motion_streaming_interface : command robot motion by sending motion points to robot
       - joint_trajectory_action : actionlib interface to control robot motion

  Usage:
    robot_interface_streaming.launch robot_ip:=<value> use_bswap:=<true,false>
-->

	<!-- version0: Set to true for older/single arm joint trajectory action -->
	<arg name="version0" doc="If true, driver assumes an older version of client without multi-group support" />

	<!-- robot_ip: IP-address of the robot's socket-messaging server -->
	<arg name="robot_ip" doc="IP of controller" />

	<!-- Load the byte-swapping versions of Fanuc nodes if required -->
	<arg name="use_bswap" doc="If true, robot driver will byte-swap all incoming and outgoing data" />

	<!-- copy the specified parameters to the Parameter Server, for 
	     use by nodes below -->
	<param name="robot_ip_address" type="str" value="$(arg robot_ip)" />

	<!-- robot_state: publishes joint positions and robot-state data
	     (from socket connection to robot)
	-->
	<include file="$(find motoman_driver)/launch/robot_state.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
		<arg name="use_bswap"  value="$(arg use_bswap)" />
	</include>

	<!-- motion_streaming_interface: sends robot motion commands by 
	     STREAMING path to robot (using socket connection to robot) 
	-->
	<include file="$(find motoman_driver)/launch/motion_streaming_interface.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
		<arg name="use_bswap"  value="$(arg use_bswap)" />
	</include>

	<!-- joint_trajectory_action: provides actionlib interface for 
	     high-level robot control
	-->
	<node if="$(arg version0)" name="joint_trajectory_action"
		pkg="industrial_robot_client" type="joint_trajectory_action" />
	<node unless="$(arg version0)" name="joint_trajectory_action"
		pkg="motoman_driver" type="motoman_driver_joint_trajectory_action" />
</launch>
